import binascii
import gmpy

enc = 16056672059288368709636041730207115746319117360094611834862340047660334549677517843257378488804014447110151432790101417043333010460160113350792945557948626107487283428432777719319349680336549809443422760999039033762481844373610193286072800342809690181788441588547454949974683509204602821476031556936505630377014597749817861052552079248954519103013717695970072093914378217552808082372301739804424478584494415848069153782538138752847308922137430256423214556613130933649331711519251797015687305136804122456181874419230303892435765332239446526413205491893497461463695055594655322612872246577546094908876266950052210050982
p1 = 15364923693579401374967709228494990327359032307693203169212797768735492525489520006045253206556337777382404770562880641149244861667975666860186848316058682051156269204062849978429805758675032471344752598558530219935774431259804888472213838317388927280904963134958924664303331730206975977597229182722113783184342316983156869303777203740238055528637536423748699467179148516937664431714556416521297892610103908599837623987731174046320291231156729558434923349395835069211694058858643976729908894136946475696314483372071242898636615276771470361217674093220856045051303344706836647778634291119522660257427783134402294971220
q1 = 15364923693579401374967709228494990327359032307693203169212797768735492525489520006045253206556337777382404770562880641149244861667975666860186848316058682051156269204062849978429805758675032471344752598558530219935774431259804888472213838317388927280904963134958924664303331730206975977597229182722113783184344104149784736071617880750896378778210062762108650373089631595161526902303660794303501569712417472098882030251957374785266382008211332936375528239920340868832404433811372578546698103595063477458563521870381739016916271228655633771457737211234800727677246250419025851682563725467052283451883799845768209412958

def main():
    x = 2 * (p1 - 1)
    y = 2 * (q1 - 1)

    l = 3
    r = 1 << 1024
    m = (l + r) // 2

    while ((x * m // (m-1) - m) != y):
        m = (l + r) // 2
        if x * m // (m - 1) - m >= y:
            l = m
        else:
            r = m
    p = x // (l-1)
    q = l
    
    e = (1<<16) + 1
    d = gmpy.invert(e, (p-1)*(q-1))
    n = p*q

    print(binascii.unhexlify((hex(pow(enc, d, n))[2:])))

if __name__ == "__main__":
    main()
